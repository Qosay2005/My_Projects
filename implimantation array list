
implimantation array list
#include <iostream>
#include <string>
using namespace std;
class Vector {
	int size;
	int capacity;
	int* arr;
public:
	Vector() {
		size = 0;
		capacity = 4;
		arr = new int[capacity];
	}
	void addTolast(int element) {
		if (isFull())
			expand();
		arr[size] = element;
		size++;


	}
	bool isFull() {
		return size == capacity;
	}
	void expand() {

		capacity *= 2;
		int* arr2 = new int[capacity];
		for (int i = 0;i < size;i++) {
			arr2[i] = arr[i];
		}
		delete[]arr;
		arr = arr2;


	}
	bool isEmpty() {
		return size == 0;
	}

	void removeLastElement() {
		if (isEmpty()) {
			cout << "array is empty";
			return;
		}
		size--;
	}
	void addTofirst(int element) {
		if (isFull())
			expand();
		for (int i = size;i > 0;i--) {
			arr[i] = arr[i - 1];  // [10,20,30,40]   arr[i] = 40  arr[i-1] = 30  arr[i] == arr[i-1] == 30
		}
		arr[0] = element;

	}
	void removeFirstElement() {
		if (isEmpty()) {
			cout << "array is empty\n";
			return;
		}
		for (int i = 0;i < size;i++)
		{
			arr[i] = arr[i + 1];
		}


	}
	void addToIndex(int index, int element) {
		if (isFull())
			expand();
		if (index > size || index < 0) {
			cout << "invaild index\n";
			return;

		}
		for (int i = 0;i < size;i++)
		{
			arr[i] = arr[i - 1];
		}
		arr[index] = element;
		size++;
	}
	void print_element() {
		for (int i = 0;i < size;i++) {
			cout << arr[i] << " ";
		}
	}
	void clear()
	{
		size = 0;
	}
	void shrinkToFit() {
		capacity = size;
		int* arr2 = new int[capacity];
		for (int i = 0;i, size;i++)
		{
			arr2[i] = arr[i];
		}
		delete[]arr;
		arr = arr2;
	}
	int getCapacity()
	{
		return capacity;
	}
	void find(int element) {
		int flage = 0, x;
		for (int i = 0;i < size;i++)
		{
			if (arr[i] == element) {
				flage = 1;
				x = arr[i];
				break;
			}
			else {
				flage = 0;
				break;
			}

		}
		if (flage)
			cout << "the element found is : " << x << "\n";
		else {
			cout << "the element not found\n";
		}


	}
	void removeAt(int index) {
		if (index < 0 || index >= size) {
			cout << "Invalid index!\n";
			return;
		}

		for (int i = index; i < size - 1; i++) {
			arr[i] = arr[i + 1];
		}
		size--;

		cout << "Element at index " << index << " removed successfully.\n";
	}

	Vector(Vector& obj) {
		size = obj.size;
		capacity = obj.capacity;
		int* arr2 = new int[size];
		arr2 = obj.arr;


	}
	~Vector() {
		delete[]arr;
	}
};



int main() {

	Vector v;
	v.addTolast(2);   	v.addTolast(3);   	v.addTolast(4);
	v.removeLastElement();
	v.addTofirst(1);
	v.removeFirstElement();
	v.find(5);
	v.removeAt(2);
}
